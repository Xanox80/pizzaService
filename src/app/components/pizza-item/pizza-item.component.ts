import { Component, Input, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Pizza } from '../../models/pizza.model';
import { MatCardModule } from '@angular/material/card';
import { MatButtonModule } from '@angular/material/button';
import { CartItem, CartService } from '../../services/cart/cart.service';

@Component({
  selector: 'app-pizza-item',
  standalone: true,
  imports: [CommonModule, MatCardModule, MatButtonModule],
  templateUrl: './pizza-item.component.html',
  styleUrls: ['./pizza-item.component.scss'],
})
export class PizzaItemComponent implements OnInit {
  @Input() pizza!: Pizza;
  showRatingPrompt = false;
  showAdvice = false;
  currentAdvice = '';
  private adviceMessages = [
    '–ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø–æ—Å–º—ñ—Ö–∞—Ç–∏—Å—è üéâ',
    '–°–ø—Ä–∞–≤–∂–Ω—è –ø—ñ—Ü–∞ ‚Äî —Ç–∞, —â–æ –∑ –¥—Ä—É–∑—è–º–∏ üçï',
    '–ö—Ä–∞—â–µ –∑‚Äô—ó—Å—Ç–∏ –ø—ñ—Ü—É, –Ω—ñ–∂ —ó—ó —Ñ–æ—Ç–∫–∞—Ç–∏ üòÑ',
    '–î–µ–Ω—å –±–µ–∑ –ø—ñ—Ü–∏ ‚Äî –¥–µ–Ω—å –≤—Ç—Ä–∞—á–µ–Ω–∏–π üôÉ',
    '–ü–æ—Å–º—ñ—à–∫–∞ ‚Äî –Ω–∞–π–∫—Ä–∞—â–∞ –ø—Ä–∏–ø—Ä–∞–≤–∞ –¥–æ –ø—ñ—Ü–∏ üòã',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ –∑–∞–≤–∂–¥–∏ –≥–∞—Ä–Ω–∞ —ñ–¥–µ—è! üçï',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —ó–∂–∞, —Ü–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ! üçïüé®',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ –ª—é–±–æ–≤ –∑ –ø–µ—Ä—à–æ–≥–æ —à–º–∞—Ç–æ—á–∫–∞ ‚ù§Ô∏è',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ —è–∫ –æ–±—ñ–π–º–∏, —Ç—ñ–ª—å–∫–∏ —Å–º–∞—á–Ω—ñ—à—ñ! üçïü§ó',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ –∑–∞–≤–∂–¥–∏ –≥–∞—Ä–Ω–∏–π –Ω–∞—Å—Ç—Ä—ñ–π! üçïüòä',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —ó–∂–∞, —Ü–µ –µ–º–æ—Ü—ñ—ó! üçï‚ù§Ô∏è',
    '–ü—ñ—Ü–∞ ‚Äî —Ü–µ —è–∫ –æ–±—ñ–π–º–∏, —Ç—ñ–ª—å–∫–∏ —Å–º–∞—á–Ω—ñ—à—ñ! üçïü§ó',
  ];

  constructor(private cartService: CartService) {}

  ngOnInit(): void {
    const shown = sessionStorage.getItem('adviceShown');
    if (!shown) {
      this.showAdvice = true;
      sessionStorage.setItem('adviceShown', 'true');
      this.currentAdvice = this.getRandomAdvice();
    }
  }

  getRandomAdvice(): string {
    const randomIndex = Math.floor(Math.random() * this.adviceMessages.length);
    return this.adviceMessages[randomIndex];
  }

  addToCart() {
    const cartItem: CartItem = {
      id: this.pizza.id,
      name: this.pizza.name,
      price: this.pizza.price,
      quantity: 1,
      image: this.pizza.image,
    };
    this.cartService.addToCart(cartItem);

    let addCount = Number(localStorage.getItem('addCount')) || 0;
    addCount++;
    localStorage.setItem('addCount', addCount.toString());

    if (addCount % 10 === 0) {
      this.showRatingPrompt = true;
    }
  }

  closeRatingPrompt() {
    this.showRatingPrompt = false;
  }

  closeAdvice() {
    this.showAdvice = false;
  }
}
